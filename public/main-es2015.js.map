{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/getting-started/getting-started-content/getting-started-content.component.html","./src/app/components/getting-started/getting-started.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/getting-started/getting-started-content/getting-started-content.component.scss","./src/app/components/getting-started/getting-started-content/getting-started-content.component.ts","./src/app/components/getting-started/getting-started.component.scss","./src/app/components/getting-started/getting-started.component.ts","./src/app/material/material.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-getting-started></app-getting-started>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<div>\\n    It is very simple to add material in the angular-application.\\n</div>\\n<div>\\n    Here are the few steps to getting started with material design.\\n</div>\\n<div>\\n    <ul>\\n        <li>\\n            Go to angular application root folder.\\n        </li>\\n        <li>\\n            Give command <b>ng add @angular/material</b>\\n        </li>\\n    </ul>\\n</div>\\n\\n<div>\\n    This command will install all the supported packages automatically.\\n</div>\\n\\n<div>\\n    <ul>\\n        <li>\\n            Go to any module.ts file (prefer app.module.ts file), the root module.\\n        </li>\\n        <li>\\n            We will import material component say button, expansion, dropdown etc here in app.module.ts file.\\n        </li>\\n        <li>\\n            Lets say we have to use material button in our application.\\n            <ul>\\n                <li>\\n                    <b>{{importModuleStr}}</b> in app.module.ts file.\\n                </li>\\n                <li>\\n                    Add <b>MatButtonModule</b> in the imports array in app.module.ts file.\\n                </li>\\n                <li>\\n                    Move to <b>app.component.html file (any html file)</b>.\\n                </li>\\n                <li>\\n                    Add button as : {{buttonStr}}\\n                </li>\\n                <li>\\n                    Run <b>ng serve</b> command and see the results.\\n                </li>\\n                <li> \\n                    If you are seeing more beautiful button then You will ready to start to play with <b><i>material.</i></b>\\n                 </li>\\n            </ul>\\n        </li>\\n    </ul>\\n</div>\"","module.exports = \"<mat-expansion-panel>\\n    <mat-expansion-panel-header>\\n        <mat-panel-title>\\n            Getting Started\\n        </mat-panel-title>\\n        <mat-panel-description>\\n            Total Duration: 15 mins\\n        </mat-panel-description>\\n    </mat-expansion-panel-header>\\n    <app-getting-started-content></app-getting-started-content>\\n</mat-expansion-panel>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'material-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material/material.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { GettingStartedComponent } from './components/getting-started/getting-started.component';\nimport { GettingStartedContentComponent } from './components/getting-started/getting-started-content/getting-started-content.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GettingStartedComponent,\n    GettingStartedContentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZ2V0dGluZy1zdGFydGVkL2dldHRpbmctc3RhcnRlZC1jb250ZW50L2dldHRpbmctc3RhcnRlZC1jb250ZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-getting-started-content',\n  templateUrl: './getting-started-content.component.html',\n  styleUrls: ['./getting-started-content.component.scss']\n})\nexport class GettingStartedContentComponent implements OnInit {\n  importModuleStr: string = `import {MatButtonModule} from '@angular/material/button';`\n  buttonStr: string = `<button mat-button>My Awesome Button</button>`;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZ2V0dGluZy1zdGFydGVkL2dldHRpbmctc3RhcnRlZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-getting-started',\n  templateUrl: './getting-started.component.html',\n  styleUrls: ['./getting-started.component.scss']\n})\nexport class GettingStartedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatExpansionModule } from '@angular/material';\n\nconst MaterialComponents = [\n  MatExpansionModule\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MaterialComponents\n  ],\n  exports: [MaterialComponents]\n})\nexport class MaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}